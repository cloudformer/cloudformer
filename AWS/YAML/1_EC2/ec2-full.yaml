AWSTemplateFormatVersion: 2010-09-09
Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    Description: Enter instance size. Default is t2.micro.
  VPCStackName:
    Type: String
    Default: cfn-1vpc-EC2-VPC1

  WorkstationIp:
    Type: String
    Description: The IP address of the workstation that can SSH into the instance.
    Default: 0.0.0.0/0
  AMI:
    Type: String
    Default: ami-005f9685cb30f234b
    Description: The Linux AMI to use.
  Key:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The key used to access the instance.
    Default: aws-key
Resources:
  EC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/'
  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "root"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "*"
            Resource: "*"
      Roles:
        - !Ref EC2Role
  EC2RoleInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: '/'
      Roles:
        - !Ref EC2Role

  Linux:
    Type: 'AWS::EC2::Instance'
    Properties:
#      SubnetId:
#        "Fn::ImportValue": !Sub cfn-1vpc-EC2-SUBNET
#      SecurityGroupIds:
#        - "Fn::ImportValue": !Sub cfn-1vpc-EC2-SG
      ImageId: !Ref AMI
      InstanceType:
        Ref: InstanceTypeParameter
      KeyName: !Ref Key
      IamInstanceProfile: !Ref EC2RoleInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
      NetworkInterfaces:
        - NetworkInterfaceId:
            Ref: NetworkInterface
          DeviceIndex: '0'
      Tags:
        -
          Key: Appplication
          Value: Linux Server
        -
          Key: Name
          Value: Linux Server1
        -
          Key: OS
          Value: Linux
      UserData:
        Fn::Base64: |
          #cloud-boothook
          #!/bin/bash
          echo "Hello World!"
  NetworkInterface:
    Type: "AWS::EC2::NetworkInterface"
    Properties:
      Description: String
      GroupSet:
        - "Fn::ImportValue": !Sub cfn-1vpc-EC2-SG
      SubnetId:
        "Fn::ImportValue": !Sub cfn-1vpc-EC2-SUBNET
      Tags:
        - Key: Role
          Value: Test Instance

Outputs:
  PublicIp:
    Value:
      Fn::GetAtt:
        - Linux
        - PublicIp
    Export:
      Name: !Sub ${AWS::StackName}-EC2